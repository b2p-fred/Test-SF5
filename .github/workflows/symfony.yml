# https://help.github.com/en/actions
name: Full CI process for Symfony 5
on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - develop
      
env:
  ES_HTTP_PORT: 9209
jobs:
  symfony:
    name: Symfony 5 (PHP ${{ matrix.php-versions }})
    # https://hub.docker.com/_/ubuntu/
    runs-on: ubuntu-20.04
#    services:
#      # MariaDB
#      mariadb:
#        image: mariadb:10.5.11
#        env:
#          MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD:-root}
#          MYSQL_DATABASE: ${DATABASE_NAME:-db}
#          MYSQL_USER: ${DATABASE_USER:-db}
#          MYSQL_PASSWORD: ${DATABASE_PASSWORD:-db}
#        ports:
#          - 3306:3306
#      # Mysql
#      mysql:
#        image: mysql:5.7
#        env:
#          MYSQL_ROOT_PASSWORD: root
#        ports:
#          - 3306:3306
#        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
#      # https://hub.docker.com/_/elasticsearch/
#      elasticsearch:
#        image: elasticsearch:6.8.10
#        ports:
#          - 9209:9200
#        options: -e="discovery.type=single-node" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['7.4', '8.0']
    steps:
      # —— Setup Github actions —————————————————————————————————————————————
      # https://github.com/actions/checkout (official)
      - name: Checkout
        uses: actions/checkout@v2

      # —— Setup PHP & extensions ————————————————————————————————————————————
      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, json
        env:
          update: true

      - name: Check PHP Version
        run: php -v

      # —— Composer —————————————————————————————————————————————————————————
      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install

      # —— Symfony ——————————————————————————————————————————————————————————
      - name: Check Symfony requirements
        run: vendor/bin/requirements-checker

      - name: Check the Symfony console
        run: |
          bin/console about
          bin/console strangebuzz:version

      # —— Coding standards —————————————————————————————————————————————————
      # Can't handle PHP8 for now
      - name: Coding standards checks (php_codesniffer + php-cs-fixer)
        run: make cs
        if: matrix.php-versions == '7.4'

      # —— Static analysis ——————————————————————————————————————————————————
      - name: Static analysis of PHP code (PHPStan)
        run: make static-analysis
        if: matrix.php-versions == '7.4'

      # —— MariaDB ——————————————————————————————————————————————————————————
      - name: Start Maria DB
        uses: ankane/setup-mariadb@v1
        with:
          mariadb-version: 10.5
          database: test-db

      # —— Tests ————————————————————————————————————————————————————————————
      - name: Load Doctrine fixtures and populate the Elasticsearch indexes
        run: |
          make load-fixtures
          make populate

      - name: Run functionnal and unit tests
        run: |
          cp phpunit.xml.ci phpunit.xml
          ./vendor/bin/phpunit --testsuite='main'
