version: "3.8"

services:

  # PHP interpreter
  php-fpm:
    build:
      context: docker/php-fpm
      args:
        - TAG_PHP=${TAG_PHP:-7.4-fpm}
    image: ${PROJECT:-test}_php:${PROJECT_VERSION:-0}
    container_name: ${PROJECT:-test}_php-fpm
    restart: unless-stopped
    environment:
      - APP_USER=${APP_USER:-www-data}
      - APP_ENV=${APP_ENV:-dev}
      - APP_SECRET=${APP_SECRET:-I_can_read_it_in_your_mind}
#      - DATABASE_URL=mysql://${DATABASE_USER:-db}:${DATABASE_PASSWORD:-db}@${DATABASE_HOST:-mariadb}:${DATABASE_PORT:-3306}/${DATABASE_NAME:-db}?serverVersion=mariadb-${TAG_MARIADB:-10.5.11}
    depends_on:
      - mariadb
    networks:
      - dev

  # API web server
  nginx-api:
    build:
      context: docker/nginx-api
      args:
        - TAG_NGINX=${TAG_NGINX:-1.20}
        - VERSION=${PROJECT_API_VERSION:-0}
    image: ${PROJECT:-test}_api:${PROJECT_VERSION:-0}
    container_name: ${PROJECT:-test}_nginx_api
    restart: unless-stopped
    depends_on:
      - php-fpm
    networks:
      - dev

  # Application database
  mariadb:
    build:
      context: docker/mariadb
      args:
        - TAG_MARIADB=${TAG_MARIADB:-10.5.11}
    image: ${PROJECT:-test}_db:${PROJECT_VERSION:-0}
    container_name: ${PROJECT:-test}_mariadb
    labels:
      com.symfony.server.service-prefix: 'mariadb'
    restart: unless-stopped
    environment:
      - MARIADB_ALLOW_EMPTY_ROOT_PASSWORD=${DATABASE_ALLOW_EMPTY_ROOT_PASSWORD:-false}
      - MARIADB_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD:-}
      - MARIADB_DATABASE=${DATABASE_NAME:-db}
      - MARIADB_USER=${DATABASE_USER:-db}
      - MARIADB_PASSWORD=${DATABASE_PASSWORD:-db}
      - MARIADB_EXTRA_DATABASES=${MARIADB_EXTRA_DATABASES:-db_test}
    networks:
      - dev

  # MySQL Web interface
  # Browse http://localhost:8080 to monitor the database
  phpmyadmin:
    build:
      context: docker/phpmyadmin
      args:
        - TAG_PHPMYADMIN=${TAG_PHPMYADMIN:-latest}
    image: ${PROJECT:-test}_dbadmin:${PROJECT_VERSION:-0}
    container_name: ${PROJECT:-test}_phpmyadmin
    restart: unless-stopped
    depends_on:
      - mariadb
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=${DATABASE_HOST:-mariadb}
      - PMA_PORT=${DATABASE_PORT:-3306}
      - PMA_USER=root
      - PMA_PASSWORD=${DATABASE_ROOT_PASSWORD:-}
    networks:
      - dev

  # Catch mails sent from the PHP application
  # Browse http://localhost:1080 to view the webmail
  mailcatcher:
    build:
      context: docker/mailcatcher
      args:
        - TAG_MAILCATCHER=${TAG_MAILCATCHER:-v0.8.0}
    image: ${PROJECT:-test}_mailer:${PROJECT_VERSION:-0}
    container_name: ${PROJECT:-test}_mailcatcher
    labels:
      com.symfony.server.service-prefix: 'MAILER'
    restart: unless-stopped
    networks:
      - dev

  # Front UI build tools
  node-nuxtjs:
    build:
      context: .
      dockerfile: docker/frontend-nuxtjs/Dockerfile
      target: node
      args:
        - TAG_NODEJS=${TAG_NODEJS:-14}
        - VERSION=${PROJECT_PWA_VERSION:-1}
    image: ${PROJECT:-test}_nuxtjs:${PROJECT_VERSION:-0}
    container_name: ${PROJECT:-test}_nuxtjs
    restart: unless-stopped
    environment:
      - "NODE_ENV=${NODE_ENV:-development}"
      - "NODE_USER=${NODE_USER:-node}"
      - "HOST=0.0.0.0"
    networks:
      - dev

  # Front UI web server (for the NuxtJs application)
  nginx-ui:
    build:
      context: .
      dockerfile: docker/frontend-nuxtjs/Dockerfile
      target: nginx
      args:
        - TAG_NGINX=${TAG_NGINX:-1.20}
        - VERSION=${PROJECT_PWA_VERSION:-1}
    image: ${PROJECT:-test}_pwa:${PROJECT_VERSION:-0}
    container_name: ${PROJECT:-test}_nginx_ui
    restart: unless-stopped
    environment:
      - "NODE_ENV=${NODE_ENV:-production}"
      - "NODE_USER=${NODE_USER:-node}"
    networks:
      - dev

networks:
  dev:
